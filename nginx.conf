user nginxuser; 
worker_processes 1;
pid /var/run/nginx.pid;


events {
  worker_connections 768;
  multi_accept on;
}


http{
  # The upstream module is the link between Node.js and Nginx.
  # Upstream is used for proxying requests to other servers.
  # All requests for / get distributed between any of the servers listed.
  include /etc/nginx/mime.types;

  upstream nodeserver {
    # Set up multiple Node.js webservers for load balancing.
    # max_fails refers to number of failed attempts
    # before server is considered inactive.
    # weight priorities traffic to server. Ex. weight=2 will recieve
    # twice as much traffic as server with weight=1

    server localhost:8081 max_fails=0 fail_timeout=10s weight=1;

    # server <your server ip>:3001 max_fails=0 fail_timeout=10s weight=1;
    # server <your server ip>:3002 max_fails=0 fail_timeout=10s weight=1;
    # server <your server ip>:3003 max_fails=0 fail_timeout=10s weight=1;
   
    # Send visitors back to the same server each time.
    ip_hash;
   
    # Enable number of keep-alive connections.
    keepalive 512;
  }
   
  server {
    listen 8080;
    listen [::]:8080 default_server ipv6only=on;

    charset utf-8;
   
    # Index files.
    index index.html;
    
    # Domain names.
    # Make sure to set the A Record on your domain's DNS settings to your server's IP address.
    # You can test if was set properly by using the `dig` command: dig slideblend.com
    server_name slideblend.com *.slideblend.com;
   
    # Timeout for closing keep-alive connections.
    keepalive_timeout 10;
    
    # Enable gzip compression.
    gzip on;
    gzip_http_version 1.1;
    gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js image/png image/gif image/jpeg image/svg+xml image/x-icon  application/octet-stream;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    types_hash_max_size 8192;
    
    # Max upload size.
    client_max_body_size 5M;
   
    # Change access and error log files.
     access_log /var/log/nginx/access.log;
     error_log /var/log/nginx/error.log;
   
    # Custom error page.
    # error_page 404 maintenance.html;
    # error_page 500 502 503 504 maintenance.html;
    
    # location /maintenance.html {
    #  root /var/www;
    # }
   
    location / {
      # Set this to your upstream module.
      proxy_pass http://nodeserver;
      # Proxy headers.
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Cache-Control "no-cache";
      proxy_http_version 1.1;
      proxy_redirect off;
      # Go to next upstream after if server down.
      proxy_next_upstream error timeout http_502 http_503 http_504;
      proxy_connect_timeout       600;
      proxy_send_timeout          600;
      proxy_read_timeout          600;
      send_timeout                600;
      # Buffer settings.
      proxy_buffers 8 32k;
      proxy_buffer_size 64k;
      # add_header Cache-Control "no-cache";
    }

    location /socket.io/ {
      proxy_pass http://nodeserver;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
    }
     
    # Enable caching of static files.
     location ~* .(svg|eot|ttf|woff|woff2|png|gif|jpg|cur)$ {
      root /var/app/current/www/;
      add_header Cache-Control max-age=604800;
     }

     # Enable caching of static files.
     location ~* .(js|css)$ {
      root /var/app/current/www/;
      add_header Cache-Control no-cache;
     }
  }
}